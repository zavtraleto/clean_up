{"version":3,"file":"BatchableText.js","sources":["../../../../src/scene/text/canvas/BatchableText.ts"],"sourcesContent":["import { BatchableSprite } from '../../sprite/BatchableSprite';\n\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { Text } from '../Text';\n\n/** @internal */\nexport class BatchableText extends BatchableSprite\n{\n    private readonly _renderer: Renderer;\n    public currentKey: string;\n\n    constructor(renderer: Renderer)\n    {\n        super();\n\n        // Next step is to make canvasTextSystem a GLOBAL object.\n        // so this is ok for now..\n        this._renderer = renderer;\n\n        renderer.runners.resolutionChange.add(this);\n    }\n\n    public resolutionChange()\n    {\n        const text = this.renderable as Text;\n\n        if (text._autoResolution)\n        {\n            text.onViewUpdate();\n        }\n    }\n\n    public destroy()\n    {\n        const { canvasText } = this._renderer;\n\n        canvasText.getReferenceCount(this.currentKey) === null\n            ? canvasText.returnTexture(this.texture)\n            : canvasText.decreaseReferenceCount(this.currentKey);\n        this._renderer.runners.resolutionChange.remove(this);\n        (this._renderer as null) = null;\n    }\n}\n"],"names":["BatchableSprite"],"mappings":";;;;;AAMO,MAAM,sBAAsBA,+BACnC,CAAA;AAAA,EAII,YAAY,QACZ,EAAA;AACI,IAAM,KAAA,EAAA,CAAA;AAIN,IAAA,IAAA,CAAK,SAAY,GAAA,QAAA,CAAA;AAEjB,IAAS,QAAA,CAAA,OAAA,CAAQ,gBAAiB,CAAA,GAAA,CAAI,IAAI,CAAA,CAAA;AAAA,GAC9C;AAAA,EAEO,gBACP,GAAA;AACI,IAAA,MAAM,OAAO,IAAK,CAAA,UAAA,CAAA;AAElB,IAAA,IAAI,KAAK,eACT,EAAA;AACI,MAAA,IAAA,CAAK,YAAa,EAAA,CAAA;AAAA,KACtB;AAAA,GACJ;AAAA,EAEO,OACP,GAAA;AACI,IAAM,MAAA,EAAE,UAAW,EAAA,GAAI,IAAK,CAAA,SAAA,CAAA;AAE5B,IAAA,UAAA,CAAW,iBAAkB,CAAA,IAAA,CAAK,UAAU,CAAA,KAAM,IAC5C,GAAA,UAAA,CAAW,aAAc,CAAA,IAAA,CAAK,OAAO,CAAA,GACrC,UAAW,CAAA,sBAAA,CAAuB,KAAK,UAAU,CAAA,CAAA;AACvD,IAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,gBAAiB,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;AACnD,IAAC,KAAK,SAAqB,GAAA,IAAA,CAAA;AAAA,GAC/B;AACJ;;;;"}